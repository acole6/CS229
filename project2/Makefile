#############################################################################
# Makefile for building: lifegui
# Generated by qmake (2.01a) (Qt 4.8.4) on: Mon May 5 04:40:51 2014
# Project:  lifegui.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile lifegui.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -std=c++11 -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-z,relro
LIBS          = $(SUBLIBS)  -L/usr/lib64 -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = cell.cc \
		chars.cc \
		color.cc \
		colors.cc \
		initial.cc \
		lifegui.cc \
		lifeclass.cc \
		lifechars.cc \
		lifecolors.cc \
		lifeinitial.cc \
		lifewidget.cc \
		control.cc \
		cellularautomaton.cc \
		ruleautomaton.cc \
		automatonparser.cc \
		range.cc \
		settings.cc \
		world.cc \
		brian.cc \
		brianchars.cc \
		briancolors.cc \
		brianinitial.cc \
		elementary.cc \
		elementarychars.cc \
		elementarycolors.cc \
		elementaryinitial.cc moc_control.cpp
OBJECTS       = cell.o \
		chars.o \
		color.o \
		colors.o \
		initial.o \
		lifegui.o \
		lifeclass.o \
		lifechars.o \
		lifecolors.o \
		lifeinitial.o \
		lifewidget.o \
		control.o \
		cellularautomaton.o \
		ruleautomaton.o \
		automatonparser.o \
		range.o \
		settings.o \
		world.o \
		brian.o \
		brianchars.o \
		briancolors.o \
		brianinitial.o \
		elementary.o \
		elementarychars.o \
		elementarycolors.o \
		elementaryinitial.o \
		moc_control.o
LIFESOURCES   = cell.cc \
		chars.cc \
		color.cc \
		colors.cc \
		initial.cc \
		life.cc \
		lifeclass.cc \
		lifechars.cc \
		lifecolors.cc \
		lifeinitial.cc \
		cellularautomaton.cc \
		ruleautomaton.cc \
		automatonparser.cc \
		range.cc \
		settings.cc \
		world.cc \
		brian.cc \
		brianchars.cc \
		briancolors.cc \
		brianinitial.cc \
		elementary.cc \
		elementarychars.cc \
		elementarycolors.cc \
		elementaryinitial.cc 
LIFEOBJECTS   = cell.o \
		chars.o \
		color.o \
		colors.o \
		initial.o \
		life.o \
		lifeclass.o \
		lifechars.o \
		lifecolors.o \
		lifeinitial.o \
		cellularautomaton.o \
		ruleautomaton.o \
		automatonparser.o \
		range.o \
		settings.o \
		world.o \
		brian.o \
		brianchars.o \
		briancolors.o \
		brianinitial.o \
		elementary.o \
		elementarychars.o \
		elementarycolors.o \
		elementaryinitial.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		lifegui.pro
QMAKE_TARGET  = lifegui
DESTDIR       = 
TARGET        = lifegui
LIFETARGET    = life

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) $(LIFETARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	
$(LIFETARGET): $(LIFEOBJECTS)
	$(LINK) -o $(LIFETARGET) $(LIFEOBJECTS)

Makefile: lifegui.pro  /usr/lib64/qt4/mkspecs/linux-g++/qmake.conf /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl
	$(QMAKE) -o Makefile lifegui.pro
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/lib64/qt4/mkspecs/common/g++-base.conf:
/usr/lib64/qt4/mkspecs/common/g++-unix.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri:
/usr/lib64/qt4/mkspecs/modules/qt_webkit.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/release.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile lifegui.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/lifegui1.0.0 || $(MKDIR) .tmp/lifegui1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/lifegui1.0.0/ && $(COPY_FILE) --parents cell.h chars.h color.h colors.h initial.h lifeclass.h lifechars.h lifecolors.h lifeinitial.h cellularautomaton.h ruleautomaton.h lifewidget.h control.h automatonparser.h lifewidget.h range.h settings.h world.h brian.h brianchars.h briancolors.h brianinitial.h elementary.h elementarychars.h elementarycolors.h elementaryinitial.h .tmp/lifegui1.0.0/ && $(COPY_FILE) --parents cell.cc chars.cc color.cc colors.cc initial.cc life.cc lifegui.cc lifeclass.cc lifechars.cc lifecolors.cc lifeinitial.cc lifewidget.cc control.cc cellularautomaton.cc ruleautomaton.cc automatonparser.cc range.cc settings.cc world.cc brian.cc brianchars.cc briancolors.cc brianinitial.cc elementary.cc elementarychars.cc elementarycolors.cc elementaryinitial.cc .tmp/lifegui1.0.0/ && (cd `dirname .tmp/lifegui1.0.0` && $(TAR) lifegui1.0.0.tar lifegui1.0.0 && $(COMPRESS) lifegui1.0.0.tar) && $(MOVE) `dirname .tmp/lifegui1.0.0`/lifegui1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/lifegui1.0.0


clean:
	touch *.o moc_control.cpp life lifegui;rm *.o moc_control.cpp life lifegui
	
acole6.tar.gz: Makefile README Comment.life TwoTerrain.life ExtraIdentifiers.life lifegui.pro cell.cc chars.cc color.cc colors.cc initial.cc lifegui.cc life.cc lifeclass.cc lifechars.cc lifecolors.cc lifeinitial.cc lifewidget.cc control.cc cellularautomaton.cc ruleautomaton.cc automatonparser.cc range.cc settings.cc world.cc brian.cc brianchars.cc briancolors.cc brianinitial.cc elementary.cc elementarychars.cc elementarycolors.cc elementaryinitial.cc cell.h chars.h color.h colors.h initial.h lifeclass.h lifechars.h lifecolors.h lifeinitial.h lifewidget.h control.h cellularautomaton.h ruleautomaton.h automatonparser.h range.h settings.h world.h brian.h brianchars.h briancolors.h brianinitial.h elementary.h elementarychars.h elementarycolors.h elementaryinitial.h
	tar -czf acole6.tar.gz Makefile README Comment.life TwoTerrain.life ExtraIdentifiers.life lifegui.pro cell.cc chars.cc color.cc colors.cc initial.cc lifegui.cc life.cc lifeclass.cc lifechars.cc lifecolors.cc lifeinitial.cc lifewidget.cc control.cc cellularautomaton.cc ruleautomaton.cc automatonparser.cc range.cc settings.cc world.cc brian.cc brianchars.cc briancolors.cc brianinitial.cc elementary.cc elementarychars.cc elementarycolors.cc elementaryinitial.cc cell.h chars.h color.h colors.h initial.h lifeclass.h lifechars.h lifecolors.h lifeinitial.h lifewidget.h control.h cellularautomaton.h ruleautomaton.h automatonparser.h range.h settings.h world.h brian.h brianchars.h briancolors.h brianinitial.h elementary.h elementarychars.h elementarycolors.h elementaryinitial.h

####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_control.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_control.cpp
moc_control.cpp: lifewidget.h \
		world.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h \
		control.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) control.h -o moc_control.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

cell.o: cell.cc cell.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cell.o cell.cc

chars.o: chars.cc chars.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o chars.o chars.cc

color.o: color.cc color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o color.o color.cc

colors.o: colors.cc colors.h \
		color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o colors.o colors.cc

initial.o: initial.cc initial.h \
		cell.h \
		range.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o initial.o initial.cc

life.o: life.cc settings.h \
		lifeclass.h \
		ruleautomaton.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h \
		elementary.h \
		brian.h \
		world.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o life.o life.cc

lifegui.o: lifegui.cc settings.h \
		lifeclass.h \
		ruleautomaton.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h \
		elementary.h \
		brian.h \
		world.h \
		automatonparser.h \
		lifewidget.h \
		control.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lifegui.o lifegui.cc

lifeclass.o: lifeclass.cc lifeclass.h \
		ruleautomaton.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h \
		lifeinitial.h \
		lifechars.h \
		lifecolors.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lifeclass.o lifeclass.cc

lifechars.o: lifechars.cc lifechars.h \
		chars.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lifechars.o lifechars.cc

lifecolors.o: lifecolors.cc lifecolors.h \
		colors.h \
		color.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lifecolors.o lifecolors.cc

lifeinitial.o: lifeinitial.cc lifeinitial.h \
		initial.h \
		cell.h \
		range.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lifeinitial.o lifeinitial.cc

lifewidget.o: lifewidget.cc lifewidget.h \
		world.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lifewidget.o lifewidget.cc

control.o: control.cc control.h \
		lifewidget.h \
		world.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o control.o control.cc

cellularautomaton.o: cellularautomaton.cc cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cellularautomaton.o cellularautomaton.cc

ruleautomaton.o: ruleautomaton.cc ruleautomaton.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ruleautomaton.o ruleautomaton.cc

automatonparser.o: automatonparser.cc automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o automatonparser.o automatonparser.cc

range.o: range.cc range.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o range.o range.cc

settings.o: settings.cc settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o settings.o settings.cc

world.o: world.cc world.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o world.o world.cc

brian.o: brian.cc brian.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h \
		brianchars.h \
		briancolors.h \
		brianinitial.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o brian.o brian.cc

brianchars.o: brianchars.cc brianchars.h \
		chars.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o brianchars.o brianchars.cc

briancolors.o: briancolors.cc briancolors.h \
		colors.h \
		color.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o briancolors.o briancolors.cc

brianinitial.o: brianinitial.cc brianinitial.h \
		initial.h \
		cell.h \
		range.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o brianinitial.o brianinitial.cc

elementary.o: elementary.cc elementary.h \
		ruleautomaton.h \
		cellularautomaton.h \
		range.h \
		chars.h \
		colors.h \
		color.h \
		initial.h \
		cell.h \
		elementarychars.h \
		elementarycolors.h \
		elementaryinitial.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o elementary.o elementary.cc

elementarychars.o: elementarychars.cc elementarychars.h \
		chars.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o elementarychars.o elementarychars.cc

elementarycolors.o: elementarycolors.cc elementarycolors.h \
		colors.h \
		color.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o elementarycolors.o elementarycolors.cc

elementaryinitial.o: elementaryinitial.cc elementaryinitial.h \
		initial.h \
		cell.h \
		range.h \
		automatonparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o elementaryinitial.o elementaryinitial.cc

moc_control.o: moc_control.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_control.o moc_control.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

